.rent-timeperiod {
    background-color: rgb(196, 81, 89);
    width: 40%;
    height: 30%;
    position: fixed;
    /* it will give you the behaviour of both absolute and sticky, if you
    used relative in any case and wants to connect it with absolute and simlutaneously wants sticky behaviour, then
    it is recommended to use fixed behaviour */
    top: 33%;
    left: 28%;
    border-radius: 1%;
    padding: 3%;
    padding-bottom: 6%;
    overflow-y: scroll;
}

.details {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.cross-icon {
    position: absolute;
    top: 10%;
    left: 90%;
    cursor: pointer;
}

.cross-icon:active {
    transform: scale(0.8);
}

.tp-button {
    width: 40%;
    border-radius: 4%;
    margin-top: 8%;
    background-color: rgb(202, 122, 137);
    cursor: pointer;
}

form {
    width: 40%;
    display: flex;
    flex-direction: column;
    align-items: center;
}


@media screen and (max-width: 320px) {
    .rent-timeperiod {
        background-color: rgb(196, 81, 89);
        width: 80%;
        height: 65%;
        position: fixed;
        top: 23%;
        left: 8%;
    }

    .tp-button {
        border-radius: 4%;
        margin-top: 8%;
        width: 80%;
    }

    .cross-icon {
        top: 6%;
        left: 88%;
    }
}

@media screen and (max-width: 425px) {
    .rent-timeperiod {
        width: 80%;
        height: 50%;
        position: fixed;
        top: 33%;
        left: 8%;
    }

    .tp-button {
        border-radius: 4%;
        margin-top: 8%;
        width: 70%;
    }

    .cross-icon {
        top: 6%;
        left: 88%;
    }

    .time-period {
        width: 140%;
    }
}

@media screen and (max-width: 768px) {
    .rent-timeperiod {
        width: 70%;
        height: 50%;
        position: fixed;
        top: 30%;
        left: 12%;
    }

    .tp-button {
        border-radius: 4%;
        margin-top: 8%;
        width: 70%;
    }

    .cross-icon {
        top: 6%;
        left: 92%;
    }

    .time-period {
        width: 140%;
    }
}